@startuml
    skinparam TabSize 4
    skinparam DefaultFontName Courier
    skinparam ClassAttributeIconSize 0

    class Person
    {
        {friend} class PersonBuilder;
        {friend} class PersonAddressBuilder;
        {friend} class PersonJobBuilder;

        - std::string   name;
        - std::string   street_address;
        - std::string   post_code;
        - std::string   city;

        - std::string   company_name;
        - std::string   position;
        - int           annual_income = 0;

        {friend} std::ostream& operator<<(std::ostream& out, const Person& person);

        - Person(const std::string& person_name);
        - Person(const Person& other_person) = delete;
        - Person& operator=(const Person& other_person) = delete;

        + ~Person();
        Person(Person&& other_person);
        Person& operator=(Person&& other_person);

        + {static} PersonBuilder create(const std::string& person_name);
    }

    class PersonBuilderBase
    {
        # Person&   person;

        # PersonBuilderBase(Person& person);

        + operator Person();
        + PersonAddressBuilder lives() const;
        + PersonJobBuilder works() const;
    }
    PersonBuilderBase::person *- Person

    class PersonBuilder
    {
        - Person    p;
        + PersonBuilder(const std::string& person_name);
    }
    PersonBuilderBase <|-- PersonBuilder
    Person -* PersonBuilder::p

    class PersonAddressBuilder
    {
        - typedef   PersonAddressBuilder    self;

        + PersonAddressBuilder(Person& person);
        
        + self& at(std::string street_address);
        + self& with_postcode(std::string post_code);
        + self& in(std::string city);
    }
    PersonBuilderBase <|-- PersonAddressBuilder

    class PersonJobBuilder
    {
        - typedef PersonJobBuilder  self;

        + PersonJobBuilder(Person& person);

        + self& at(std::string company_name);
        + self& as_a(std::string position);
        + self& earning(int annual_income);
    }
    PersonBuilderBase <|-- PersonJobBuilder
@enduml